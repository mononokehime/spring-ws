<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
				xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
				xmlns:sws="http://www.springframework.org/schema/web-services"
	   			xmlns:oxm="http://www.springframework.org/schema/oxm"
       			xsi:schemaLocation=
       				"http://www.springframework.org/schema/beans
       				http://www.springframework.org/schema/beans/spring-beans.xsd
       	 			http://www.springframework.org/schema/web-services
       				http://www.springframework.org/schema/web-services/web-services.xsd
       				http://www.springframework.org/schema/oxm
       				http://www.springframework.org/schema/oxm/spring-oxm.xsd">

    <description>
        This web application context contains Spring-WS beans. The beans defined in this context are automatically
        detected by Spring-WS, similar to the way Controllers are picked up in Spring Web MVC.
    </description>

 	<!--
		We have two important URLa:
		WSDL: http://localhost:8080/{projectName}/{root-path}/ws/{bean-name}.wsdl
		Example: http://localhost:8080/spring-ws/krams/ws/subscription.wsdl

		Endpoint: http://localhost:8080/{projectName}/{root-path}/ws
		Example: http://localhost:8080/spring-ws/krams/ws

		These urls are based on the root path declared in the web.xml and in the SimpleUrlHandlerMapping
	-->

 	<!-- Uses the latest feature from 2.0.0 RC2.
	 	Enables @Endpoint and related Spring-WS annotations. See Spring WS Reference 5.4-->
	 <sws:annotation-driven />

	 <!-- Uses the latest feature from 2.0.0 RC2.
	 	Enables interceptor endpoints. See Spring WS Reference 5.5.2
	 	Here we have an interceptor that validates XML request and a logger
	    -->
	 <sws:interceptors>
	 	    <bean id="validatingInterceptor"  class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor">
				<property name="schema" value="classpath:subscription.xsd"/>
				<property name="validateRequest" value="true"/>
				<property name="validateResponse" value="true"/>
			</bean>

		    <bean id="loggingInterceptor" class="org.springframework.ws.server.endpoint.interceptor.PayloadLoggingInterceptor">
				<property name="logRequest" value="true"/>
				<property name="logResponse" value="true"/>
			</bean>
	 </sws:interceptors>

	<!-- Uses the latest feature from 2.0.0 RC2.
	 	Enables publishing of wsdl. See Spring WS Reference 3.7
	 	For dynamic location transformation to work, a special parameter must be added to the web.xml.
	 	The locationUri here has no use when integrated with Spring MVC because
	 	it has been overriden by the SimpleUrlHandlerMapping -->
    <sws:dynamic-wsdl id="subscription"
	    portTypeName="SubscriptionPort"
	    locationUri="/"
	    targetNamespace="http://krams915.blogspot.com/ws/schema/oss">
	  <sws:xsd location="classpath:subscription.xsd"/>
	</sws:dynamic-wsdl>


	<oxm:jaxb2-marshaller id="marshaller" context-path="com.blogspot.krams915.ws.schema.oss"/>

</beans>